= RouteHawk

This project rocks and uses MIT-LICENSE.

= RouteHawk

This project rocks and uses MIT-LICENSE.


users have many roles
roles have many routes via role_routes

# tables
users [app]

user_roles
roles
role_routes


so we'd like to say
class User << ActiveRecord::Base
  has_routes_via_roles
end

which would enable us to
  grant_role!(role_name)
  revoke_role!(role_name)
  has_role?(role_name)
  unassigned_roles(role_name)
  permit_route?(route)
end

so lets just start with roles


and this is the basic stuff we want to do
# == AUTHORIZATION
def grant_role!(role_name)
  r = Role.find_by_name(role_name.to_s)
  roles << r unless r.nil? || roles.include?(r)
end

def revoke_role!(role_name)
  r = Role.find_by_name(role_name.to_s)
  roles.delete(r) unless r.nil?
end

def has_role?(role_name)
  Role.where(name: role_name).count > 0
end

def unassigned_roles
  rs = Role.all_but_anon - self.roles
end

def is_admin?
  admin
end

def permit_route?(route)
  roles.with_role_routes.any? {|r| r.permit_route?(route)}
end
so we attach to one object like

hawk_routes